/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.ncl.formatting2

import com.google.inject.Inject
import org.eclipse.ocl.xtext.basecs.ImportCS
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.ncl.nCL.TopLevelCP
import org.xtext.example.ncl.services.NCLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.AbstractFormatter2

class NCLFormatter extends AbstractFormatter2 {
	
	@Inject extension NCLGrammarAccess

	def dispatch void format(TopLevelCP topLevelCP, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (importCS : topLevelCP.ownedImports) {
			importCS.format
		}
		for (homocomCP : topLevelCP.ownedHomocoms) {
			homocomCP.format
		}
		for (hetecomCP : topLevelCP.ownedHetecoms) {
			hetecomCP.format
		}
	}

	def dispatch void format(ImportCS importCS, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		importCS.ownedPathName.format
	}
	
	// TODO: implement for HomocomCP, HomoStatementCS, HetecomCP, HeteStatementCS
}
