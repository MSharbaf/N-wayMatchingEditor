/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.ncl.nCL.impl;


import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.eclipse.ocl.pivot.PivotPackage;

import org.eclipse.ocl.xtext.basecs.BaseCSPackage;

import org.xtext.example.ncl.nCL.HeteConditionCS;
import org.xtext.example.ncl.nCL.HeteStatementCS;
import org.xtext.example.ncl.nCL.HetecomCP;
import org.xtext.example.ncl.nCL.HomoConditionCS;
import org.xtext.example.ncl.nCL.HomoStatementCS;
import org.xtext.example.ncl.nCL.HomocomCP;
import org.xtext.example.ncl.nCL.NCLFactory;
import org.xtext.example.ncl.nCL.NCLPackage;
import org.xtext.example.ncl.nCL.TopLevelCP;
import org.xtext.example.ncl.nCL.metaModelTypeCS;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class NCLPackageImpl extends EPackageImpl implements NCLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass topLevelCPEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass homocomCPEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass metaModelTypeCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass homoStatementCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass homoConditionCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass hetecomCPEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass heteStatementCSEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass heteConditionCSEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.example.ncl.nCL.NCLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private NCLPackageImpl()
  {
    super(eNS_URI, NCLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link NCLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static NCLPackage init()
  {
    if (isInited) return (NCLPackage)EPackage.Registry.INSTANCE.getEPackage(NCLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredNCLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    NCLPackageImpl theNCLPackage = registeredNCLPackage instanceof NCLPackageImpl ? (NCLPackageImpl)registeredNCLPackage : new NCLPackageImpl();

    isInited = true;

    // Initialize simple dependencies
    BaseCSPackage.eINSTANCE.eClass();
    PivotPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theNCLPackage.createPackageContents();

    // Initialize created meta-data
    theNCLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theNCLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(NCLPackage.eNS_URI, theNCLPackage);
    return theNCLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTopLevelCP()
  {
    return topLevelCPEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTopLevelCP_Name()
  {
    return (EAttribute)topLevelCPEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTopLevelCP_OwnedImports()
  {
    return (EReference)topLevelCPEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTopLevelCP_OwnedHomocoms()
  {
    return (EReference)topLevelCPEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTopLevelCP_OwnedHetecoms()
  {
    return (EReference)topLevelCPEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHomocomCP()
  {
    return homocomCPEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHomocomCP_OwnedMetaModels()
  {
    return (EReference)homocomCPEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHomocomCP_OwnedStatements()
  {
    return (EReference)homocomCPEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getmetaModelTypeCS()
  {
    return metaModelTypeCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getmetaModelTypeCS_Name()
  {
    return (EAttribute)metaModelTypeCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHomoStatementCS()
  {
    return homoStatementCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHomoStatementCS_OwnedConditions()
  {
    return (EReference)homoStatementCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHomoConditionCS()
  {
    return homoConditionCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHomoConditionCS_OwnedElementA()
  {
    return (EAttribute)homoConditionCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHomoConditionCS_OwnedElementB()
  {
    return (EAttribute)homoConditionCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHomoConditionCS_OwnedElement()
  {
    return (EAttribute)homoConditionCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHetecomCP()
  {
    return hetecomCPEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHetecomCP_OwnedModels()
  {
    return (EReference)hetecomCPEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHetecomCP_OwnedStatements()
  {
    return (EReference)hetecomCPEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHeteStatementCS()
  {
    return heteStatementCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHeteStatementCS_OwnedConditions()
  {
    return (EReference)heteStatementCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHeteConditionCS()
  {
    return heteConditionCSEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHeteConditionCS_OwnedElementA()
  {
    return (EAttribute)heteConditionCSEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHeteConditionCS_OwnedElementB()
  {
    return (EAttribute)heteConditionCSEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getHeteConditionCS_OwnedElement()
  {
    return (EAttribute)heteConditionCSEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NCLFactory getNCLFactory()
  {
    return (NCLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    topLevelCPEClass = createEClass(TOP_LEVEL_CP);
    createEAttribute(topLevelCPEClass, TOP_LEVEL_CP__NAME);
    createEReference(topLevelCPEClass, TOP_LEVEL_CP__OWNED_IMPORTS);
    createEReference(topLevelCPEClass, TOP_LEVEL_CP__OWNED_HOMOCOMS);
    createEReference(topLevelCPEClass, TOP_LEVEL_CP__OWNED_HETECOMS);

    homocomCPEClass = createEClass(HOMOCOM_CP);
    createEReference(homocomCPEClass, HOMOCOM_CP__OWNED_META_MODELS);
    createEReference(homocomCPEClass, HOMOCOM_CP__OWNED_STATEMENTS);

    metaModelTypeCSEClass = createEClass(META_MODEL_TYPE_CS);
    createEAttribute(metaModelTypeCSEClass, META_MODEL_TYPE_CS__NAME);

    homoStatementCSEClass = createEClass(HOMO_STATEMENT_CS);
    createEReference(homoStatementCSEClass, HOMO_STATEMENT_CS__OWNED_CONDITIONS);

    homoConditionCSEClass = createEClass(HOMO_CONDITION_CS);
    createEAttribute(homoConditionCSEClass, HOMO_CONDITION_CS__OWNED_ELEMENT_A);
    createEAttribute(homoConditionCSEClass, HOMO_CONDITION_CS__OWNED_ELEMENT_B);
    createEAttribute(homoConditionCSEClass, HOMO_CONDITION_CS__OWNED_ELEMENT);

    hetecomCPEClass = createEClass(HETECOM_CP);
    createEReference(hetecomCPEClass, HETECOM_CP__OWNED_MODELS);
    createEReference(hetecomCPEClass, HETECOM_CP__OWNED_STATEMENTS);

    heteStatementCSEClass = createEClass(HETE_STATEMENT_CS);
    createEReference(heteStatementCSEClass, HETE_STATEMENT_CS__OWNED_CONDITIONS);

    heteConditionCSEClass = createEClass(HETE_CONDITION_CS);
    createEAttribute(heteConditionCSEClass, HETE_CONDITION_CS__OWNED_ELEMENT_A);
    createEAttribute(heteConditionCSEClass, HETE_CONDITION_CS__OWNED_ELEMENT_B);
    createEAttribute(heteConditionCSEClass, HETE_CONDITION_CS__OWNED_ELEMENT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    BaseCSPackage theBaseCSPackage = (BaseCSPackage)EPackage.Registry.INSTANCE.getEPackage(BaseCSPackage.eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(topLevelCPEClass, TopLevelCP.class, "TopLevelCP", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTopLevelCP_Name(), ecorePackage.getEString(), "name", null, 0, 1, TopLevelCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTopLevelCP_OwnedImports(), theBaseCSPackage.getImportCS(), null, "ownedImports", null, 0, -1, TopLevelCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTopLevelCP_OwnedHomocoms(), this.getHomocomCP(), null, "ownedHomocoms", null, 0, -1, TopLevelCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTopLevelCP_OwnedHetecoms(), this.getHetecomCP(), null, "ownedHetecoms", null, 0, -1, TopLevelCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(homocomCPEClass, HomocomCP.class, "HomocomCP", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getHomocomCP_OwnedMetaModels(), this.getmetaModelTypeCS(), null, "ownedMetaModels", null, 0, -1, HomocomCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getHomocomCP_OwnedStatements(), this.getHomoStatementCS(), null, "ownedStatements", null, 0, -1, HomocomCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(metaModelTypeCSEClass, metaModelTypeCS.class, "metaModelTypeCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getmetaModelTypeCS_Name(), ecorePackage.getEString(), "name", null, 0, 1, metaModelTypeCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(homoStatementCSEClass, HomoStatementCS.class, "HomoStatementCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getHomoStatementCS_OwnedConditions(), this.getHomoConditionCS(), null, "ownedConditions", null, 0, -1, HomoStatementCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(homoConditionCSEClass, HomoConditionCS.class, "HomoConditionCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHomoConditionCS_OwnedElementA(), ecorePackage.getEString(), "ownedElementA", null, 0, 1, HomoConditionCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getHomoConditionCS_OwnedElementB(), ecorePackage.getEString(), "ownedElementB", null, 0, 1, HomoConditionCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getHomoConditionCS_OwnedElement(), ecorePackage.getEString(), "ownedElement", null, 0, -1, HomoConditionCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(hetecomCPEClass, HetecomCP.class, "HetecomCP", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getHetecomCP_OwnedModels(), this.getmetaModelTypeCS(), null, "ownedModels", null, 0, -1, HetecomCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getHetecomCP_OwnedStatements(), this.getHeteStatementCS(), null, "ownedStatements", null, 0, -1, HetecomCP.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(heteStatementCSEClass, HeteStatementCS.class, "HeteStatementCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getHeteStatementCS_OwnedConditions(), this.getHeteConditionCS(), null, "ownedConditions", null, 0, -1, HeteStatementCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(heteConditionCSEClass, HeteConditionCS.class, "HeteConditionCS", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getHeteConditionCS_OwnedElementA(), ecorePackage.getEString(), "ownedElementA", null, 0, 1, HeteConditionCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getHeteConditionCS_OwnedElementB(), ecorePackage.getEString(), "ownedElementB", null, 0, 1, HeteConditionCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getHeteConditionCS_OwnedElement(), ecorePackage.getEString(), "ownedElement", null, 0, -1, HeteConditionCS.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //NCLPackageImpl
