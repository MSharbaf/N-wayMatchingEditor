/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.ncl.nCL.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

import org.xtext.example.ncl.nCL.HomoConditionCS;
import org.xtext.example.ncl.nCL.NCLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Homo Condition CS</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.ncl.nCL.impl.HomoConditionCSImpl#getOwnedElementA <em>Owned Element A</em>}</li>
 *   <li>{@link org.xtext.example.ncl.nCL.impl.HomoConditionCSImpl#getOwnedElementB <em>Owned Element B</em>}</li>
 *   <li>{@link org.xtext.example.ncl.nCL.impl.HomoConditionCSImpl#getOwnedElement <em>Owned Element</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HomoConditionCSImpl extends MinimalEObjectImpl.Container implements HomoConditionCS
{
  /**
   * The default value of the '{@link #getOwnedElementA() <em>Owned Element A</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedElementA()
   * @generated
   * @ordered
   */
  protected static final String OWNED_ELEMENT_A_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOwnedElementA() <em>Owned Element A</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedElementA()
   * @generated
   * @ordered
   */
  protected String ownedElementA = OWNED_ELEMENT_A_EDEFAULT;

  /**
   * The default value of the '{@link #getOwnedElementB() <em>Owned Element B</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedElementB()
   * @generated
   * @ordered
   */
  protected static final String OWNED_ELEMENT_B_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getOwnedElementB() <em>Owned Element B</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedElementB()
   * @generated
   * @ordered
   */
  protected String ownedElementB = OWNED_ELEMENT_B_EDEFAULT;

  /**
   * The cached value of the '{@link #getOwnedElement() <em>Owned Element</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOwnedElement()
   * @generated
   * @ordered
   */
  protected EList<String> ownedElement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HomoConditionCSImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NCLPackage.Literals.HOMO_CONDITION_CS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOwnedElementA()
  {
    return ownedElementA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOwnedElementA(String newOwnedElementA)
  {
    String oldOwnedElementA = ownedElementA;
    ownedElementA = newOwnedElementA;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_A, oldOwnedElementA, ownedElementA));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getOwnedElementB()
  {
    return ownedElementB;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOwnedElementB(String newOwnedElementB)
  {
    String oldOwnedElementB = ownedElementB;
    ownedElementB = newOwnedElementB;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_B, oldOwnedElementB, ownedElementB));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getOwnedElement()
  {
    if (ownedElement == null)
    {
      ownedElement = new EDataTypeEList<String>(String.class, this, NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT);
    }
    return ownedElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_A:
        return getOwnedElementA();
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_B:
        return getOwnedElementB();
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT:
        return getOwnedElement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_A:
        setOwnedElementA((String)newValue);
        return;
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_B:
        setOwnedElementB((String)newValue);
        return;
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT:
        getOwnedElement().clear();
        getOwnedElement().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_A:
        setOwnedElementA(OWNED_ELEMENT_A_EDEFAULT);
        return;
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_B:
        setOwnedElementB(OWNED_ELEMENT_B_EDEFAULT);
        return;
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT:
        getOwnedElement().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_A:
        return OWNED_ELEMENT_A_EDEFAULT == null ? ownedElementA != null : !OWNED_ELEMENT_A_EDEFAULT.equals(ownedElementA);
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT_B:
        return OWNED_ELEMENT_B_EDEFAULT == null ? ownedElementB != null : !OWNED_ELEMENT_B_EDEFAULT.equals(ownedElementB);
      case NCLPackage.HOMO_CONDITION_CS__OWNED_ELEMENT:
        return ownedElement != null && !ownedElement.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ownedElementA: ");
    result.append(ownedElementA);
    result.append(", ownedElementB: ");
    result.append(ownedElementB);
    result.append(", ownedElement: ");
    result.append(ownedElement);
    result.append(')');
    return result.toString();
  }

} //HomoConditionCSImpl
